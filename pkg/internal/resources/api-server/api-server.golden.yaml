- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/instance: foo
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: api-server
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: api-server
    name: kubecarrier-api-server-manager-role
    namespace: kubecarrier-system-10
  rules: []
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: foo
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: api-server
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: api-server
    name: kubecarrier-api-server-sa
    namespace: kubecarrier-system-10
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: foo
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: api-server
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: api-server
    name: kubecarrier-api-server-manager-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: manager-role
  subjects:
  - kind: ServiceAccount
    name: kubecarrier-api-server-sa
    namespace: kubecarrier-system-10
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/instance: foo
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: api-server
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: api-server
    name: kubecarrier-api-server-leader-election-role
    namespace: kubecarrier-system-10
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps/status
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: foo
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: api-server
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: api-server
    name: kubecarrier-api-server-leader-election-rolebinding
    namespace: kubecarrier-system-10
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubecarrier-api-server-leader-election-role
  subjects:
  - kind: ServiceAccount
    name: kubecarrier-api-server-sa
    namespace: kubecarrier-system-10
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: foo
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: api-server
      app.kubernetes.io/version: was not build properly
      control-plane: api-server
      kubecarrier.io/role: api-server
    name: kubecarrier-api-server-manager
    namespace: kubecarrier-system-10
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: api-server
        kubecarrier.io/role: api-server
    template:
      metadata:
        labels:
          control-plane: api-server
          kubecarrier.io/role: api-server
      spec:
        containers:
          - args: []
            image: quay.io/kubecarrier/api-server:was not build properly
            name: manager
            resources:
              limits:
                cpu: 100m
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 100Mi
            volumeMounts: []
        serviceAccountName: kubecarrier-api-server-sa
        terminationGracePeriodSeconds: 10
        volumes: []
